Terminals unused in grammar

    BOOL
    UMINUS


State 87 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: submodules

    2 submodules: submodule
    3           | submodules submodule

    4 submodule: statement
    5          | function
    6          | block

    7 block: LBRACE statements RBRACE

    8 statements: statement
    9           | statements statement

   10 function: type IDENTIFIER LPAREN RPAREN block

   11 statement: empty
   12          | declaration
   13          | assign_stmt
   14          | compound
   15          | IO

   16 empty: SEMICOLON

   17 declaration: type idlist SEMICOLON
   18            | type IDENTIFIER ASSIGN assign_expr SEMICOLON

   19 idlist: IDENTIFIER
   20       | idlist STARY IDENTIFIER

   21 assign_stmt: IDENTIFIER ASSIGNOP expr SEMICOLON

   22 compound: if_else
   23         | while
   24         | for

   25 if_else: IF bool_statment com_statement
   26        | IF bool_statment com_statement ELSE com_statement

   27 while: WHILE bool_statment com_statement

   28 for: FOR LPAREN firstexpr SEMICOLON expr SEMICOLON expr RPAREN com_statement
   29    | FOR LPAREN firstexpr SEMICOLON expr SEMICOLON RPAREN com_statement
   30    | FOR LPAREN firstexpr SEMICOLON SEMICOLON expr RPAREN com_statement
   31    | FOR LPAREN firstexpr SEMICOLON SEMICOLON RPAREN com_statement
   32    | FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN com_statement
   33    | FOR LPAREN SEMICOLON expr SEMICOLON RPAREN com_statement
   34    | FOR LPAREN SEMICOLON SEMICOLON expr RPAREN com_statement
   35    | FOR LPAREN SEMICOLON SEMICOLON RPAREN com_statement

   36 firstexpr: assign_expr
   37          | type idlist
   38          | type IDENTIFIER ASSIGN assign_expr

   39 com_statement: statement
   40              | block

   41 bool_statment: LPAREN bool_expr RPAREN

   42 IO: printf SEMICOLON
   43   | scanf SEMICOLON

   44 printf: PRINTF LPAREN expr RPAREN
   45       | PRINTF LPAREN STRING STARY expr RPAREN

   46 scanf: SCANF LPAREN STRING STARY inexpr RPAREN

   47 inexpr: GETV IDENTIFIER
   48       | inexpr STARY GETV IDENTIFIER

   49 bool_expr: TRUE
   50          | FALSE
   51          | logic_expr

   52 basic_expr: IDENTIFIER
   53           | const
   54           | LPAREN expr RPAREN

   55 back_expr: basic_expr
   56          | back_expr TADD
   57          | back_expr TSUB

   58 front_expr: back_expr
   59           | TADD front_expr
   60           | TSUB front_expr

   61 unary_expr: front_expr
   62           | NOT unary_expr
   63           | SUB unary_expr

   64 muldevmode_expr: unary_expr
   65                | muldevmode_expr MUL unary_expr
   66                | muldevmode_expr DEV unary_expr
   67                | muldevmode_expr MOD unary_expr

   68 addsub_expr: muldevmode_expr
   69            | addsub_expr ADD muldevmode_expr
   70            | addsub_expr SUB muldevmode_expr

   71 relation_expr: addsub_expr
   72              | relation_expr LARGE addsub_expr
   73              | relation_expr LEQ addsub_expr
   74              | relation_expr SMALL addsub_expr
   75              | relation_expr SEQ addsub_expr

   76 eq_expr: relation_expr
   77        | eq_expr EQUAL relation_expr
   78        | eq_expr NEQ relation_expr

   79 and_expr: eq_expr
   80         | and_expr AND eq_expr

   81 logic_expr: and_expr
   82           | logic_expr OR and_expr

   83 assign_expr: logic_expr
   84            | assign_expr ASSIGN logic_expr
   85            | assign_expr PLUS logic_expr
   86            | assign_expr MINUS logic_expr

   87 expr: assign_expr
   88     | expr STARY assign_expr

   89 type: INT
   90     | CHAR
   91     | STRING
   92     | VOID

   93 const: INTEGER
   94      | CHARVALUE
   95      | STRING

   96 ASSIGNOP: ASSIGN
   97         | MINUS
   98         | PLUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR (258) 90
    INT (259) 89
    BOOL (260)
    VOID (261) 92
    IDENTIFIER (262) 10 18 19 20 21 38 47 48 52
    INTEGER (263) 93
    CHARVALUE (264) 94
    STRING (265) 45 46 91 95
    IF (266) 25 26
    ELSE (267) 26
    WHILE (268) 27
    FOR (269) 28 29 30 31 32 33 34 35
    LPAREN (270) 10 28 29 30 31 32 33 34 35 41 44 45 46 54
    RPAREN (271) 10 28 29 30 31 32 33 34 35 41 44 45 46 54
    LBRACE (272) 7
    RBRACE (273) 7
    SEMICOLON (274) 16 17 18 21 28 29 30 31 32 33 34 35 42 43
    STARY (275) 20 45 46 48 88
    ASSIGN (276) 18 38 84 96
    PLUS (277) 85 98
    MINUS (278) 86 97
    TRUE (279) 49
    FALSE (280) 50
    PRINTF (281) 44 45
    SCANF (282) 46
    ADD (283) 69
    SUB (284) 63 70
    MUL (285) 65
    DEV (286) 66
    MOD (287) 67
    GETV (288) 47 48
    NOT (289) 62
    EQUAL (290) 77
    LARGE (291) 72
    LEQ (292) 73
    SMALL (293) 74
    SEQ (294) 75
    NEQ (295) 78
    TADD (296) 56 59
    TSUB (297) 57 60
    AND (298) 80
    OR (299) 82
    UMINUS (300)
    LOWER_THEN_ELSE (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 1
        on right: 0
    submodules (49)
        on left: 2 3
        on right: 1 3
    submodule (50)
        on left: 4 5 6
        on right: 2 3
    block (51)
        on left: 7
        on right: 6 10 40
    statements (52)
        on left: 8 9
        on right: 7 9
    function (53)
        on left: 10
        on right: 5
    statement (54)
        on left: 11 12 13 14 15
        on right: 4 8 9 39
    empty (55)
        on left: 16
        on right: 11
    declaration (56)
        on left: 17 18
        on right: 12
    idlist (57)
        on left: 19 20
        on right: 17 20 37
    assign_stmt (58)
        on left: 21
        on right: 13
    compound (59)
        on left: 22 23 24
        on right: 14
    if_else (60)
        on left: 25 26
        on right: 22
    while (61)
        on left: 27
        on right: 23
    for (62)
        on left: 28 29 30 31 32 33 34 35
        on right: 24
    firstexpr (63)
        on left: 36 37 38
        on right: 28 29 30 31
    com_statement (64)
        on left: 39 40
        on right: 25 26 27 28 29 30 31 32 33 34 35
    bool_statment (65)
        on left: 41
        on right: 25 26 27
    IO (66)
        on left: 42 43
        on right: 15
    printf (67)
        on left: 44 45
        on right: 42
    scanf (68)
        on left: 46
        on right: 43
    inexpr (69)
        on left: 47 48
        on right: 46 48
    bool_expr (70)
        on left: 49 50 51
        on right: 41
    basic_expr (71)
        on left: 52 53 54
        on right: 55
    back_expr (72)
        on left: 55 56 57
        on right: 56 57 58
    front_expr (73)
        on left: 58 59 60
        on right: 59 60 61
    unary_expr (74)
        on left: 61 62 63
        on right: 62 63 64 65 66 67
    muldevmode_expr (75)
        on left: 64 65 66 67
        on right: 65 66 67 68 69 70
    addsub_expr (76)
        on left: 68 69 70
        on right: 69 70 71 72 73 74 75
    relation_expr (77)
        on left: 71 72 73 74 75
        on right: 72 73 74 75 76 77 78
    eq_expr (78)
        on left: 76 77 78
        on right: 77 78 79 80
    and_expr (79)
        on left: 79 80
        on right: 80 81 82
    logic_expr (80)
        on left: 81 82
        on right: 51 82 83 84 85 86
    assign_expr (81)
        on left: 83 84 85 86
        on right: 18 36 38 84 85 86 87 88
    expr (82)
        on left: 87 88
        on right: 21 28 29 30 32 33 34 44 45 54 88
    type (83)
        on left: 89 90 91 92
        on right: 10 17 18 37 38
    const (84)
        on left: 93 94 95
        on right: 53
    ASSIGNOP (85)
        on left: 96 97 98
        on right: 21


State 0

    0 $accept: . program $end

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    program      go to state 13
    submodules   go to state 14
    submodule    go to state 15
    block        go to state 16
    function     go to state 17
    statement    go to state 18
    empty        go to state 19
    declaration  go to state 20
    assign_stmt  go to state 21
    compound     go to state 22
    if_else      go to state 23
    while        go to state 24
    for          go to state 25
    IO           go to state 26
    printf       go to state 27
    scanf        go to state 28
    type         go to state 29


State 1

   90 type: CHAR .

    $default  reduce using rule 90 (type)


State 2

   89 type: INT .

    $default  reduce using rule 89 (type)


State 3

   92 type: VOID .

    $default  reduce using rule 92 (type)


State 4

   21 assign_stmt: IDENTIFIER . ASSIGNOP expr SEMICOLON

    ASSIGN  shift, and go to state 30
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    ASSIGNOP  go to state 33


State 5

   91 type: STRING .

    $default  reduce using rule 91 (type)


State 6

   25 if_else: IF . bool_statment com_statement
   26        | IF . bool_statment com_statement ELSE com_statement

    LPAREN  shift, and go to state 34

    bool_statment  go to state 35


State 7

   27 while: WHILE . bool_statment com_statement

    LPAREN  shift, and go to state 34

    bool_statment  go to state 36


State 8

   28 for: FOR . LPAREN firstexpr SEMICOLON expr SEMICOLON expr RPAREN com_statement
   29    | FOR . LPAREN firstexpr SEMICOLON expr SEMICOLON RPAREN com_statement
   30    | FOR . LPAREN firstexpr SEMICOLON SEMICOLON expr RPAREN com_statement
   31    | FOR . LPAREN firstexpr SEMICOLON SEMICOLON RPAREN com_statement
   32    | FOR . LPAREN SEMICOLON expr SEMICOLON expr RPAREN com_statement
   33    | FOR . LPAREN SEMICOLON expr SEMICOLON RPAREN com_statement
   34    | FOR . LPAREN SEMICOLON SEMICOLON expr RPAREN com_statement
   35    | FOR . LPAREN SEMICOLON SEMICOLON RPAREN com_statement

    LPAREN  shift, and go to state 37


State 9

    7 block: LBRACE . statements RBRACE

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    statements   go to state 38
    statement    go to state 39
    empty        go to state 19
    declaration  go to state 20
    assign_stmt  go to state 21
    compound     go to state 22
    if_else      go to state 23
    while        go to state 24
    for          go to state 25
    IO           go to state 26
    printf       go to state 27
    scanf        go to state 28
    type         go to state 40


State 10

   16 empty: SEMICOLON .

    $default  reduce using rule 16 (empty)


State 11

   44 printf: PRINTF . LPAREN expr RPAREN
   45       | PRINTF . LPAREN STRING STARY expr RPAREN

    LPAREN  shift, and go to state 41


State 12

   46 scanf: SCANF . LPAREN STRING STARY inexpr RPAREN

    LPAREN  shift, and go to state 42


State 13

    0 $accept: program . $end

    $end  shift, and go to state 43


State 14

    1 program: submodules .
    3 submodules: submodules . submodule

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    $default  reduce using rule 1 (program)

    submodule    go to state 44
    block        go to state 16
    function     go to state 17
    statement    go to state 18
    empty        go to state 19
    declaration  go to state 20
    assign_stmt  go to state 21
    compound     go to state 22
    if_else      go to state 23
    while        go to state 24
    for          go to state 25
    IO           go to state 26
    printf       go to state 27
    scanf        go to state 28
    type         go to state 29


State 15

    2 submodules: submodule .

    $default  reduce using rule 2 (submodules)


State 16

    6 submodule: block .

    $default  reduce using rule 6 (submodule)


State 17

    5 submodule: function .

    $default  reduce using rule 5 (submodule)


State 18

    4 submodule: statement .

    $default  reduce using rule 4 (submodule)


State 19

   11 statement: empty .

    $default  reduce using rule 11 (statement)


State 20

   12 statement: declaration .

    $default  reduce using rule 12 (statement)


State 21

   13 statement: assign_stmt .

    $default  reduce using rule 13 (statement)


State 22

   14 statement: compound .

    $default  reduce using rule 14 (statement)


State 23

   22 compound: if_else .

    $default  reduce using rule 22 (compound)


State 24

   23 compound: while .

    $default  reduce using rule 23 (compound)


State 25

   24 compound: for .

    $default  reduce using rule 24 (compound)


State 26

   15 statement: IO .

    $default  reduce using rule 15 (statement)


State 27

   42 IO: printf . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 28

   43 IO: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 29

   10 function: type . IDENTIFIER LPAREN RPAREN block
   17 declaration: type . idlist SEMICOLON
   18            | type . IDENTIFIER ASSIGN assign_expr SEMICOLON

    IDENTIFIER  shift, and go to state 47

    idlist  go to state 48


State 30

   96 ASSIGNOP: ASSIGN .

    $default  reduce using rule 96 (ASSIGNOP)


State 31

   98 ASSIGNOP: PLUS .

    $default  reduce using rule 98 (ASSIGNOP)


State 32

   97 ASSIGNOP: MINUS .

    $default  reduce using rule 97 (ASSIGNOP)


State 33

   21 assign_stmt: IDENTIFIER ASSIGNOP . expr SEMICOLON

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 69
    const            go to state 70


State 34

   41 bool_statment: LPAREN . bool_expr RPAREN

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    TRUE        shift, and go to state 71
    FALSE       shift, and go to state 72
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    bool_expr        go to state 73
    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 74
    const            go to state 70


State 35

   25 if_else: IF bool_statment . com_statement
   26        | IF bool_statment . com_statement ELSE com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 77
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 36

   27 while: WHILE bool_statment . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 78
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 37

   28 for: FOR LPAREN . firstexpr SEMICOLON expr SEMICOLON expr RPAREN com_statement
   29    | FOR LPAREN . firstexpr SEMICOLON expr SEMICOLON RPAREN com_statement
   30    | FOR LPAREN . firstexpr SEMICOLON SEMICOLON expr RPAREN com_statement
   31    | FOR LPAREN . firstexpr SEMICOLON SEMICOLON RPAREN com_statement
   32    | FOR LPAREN . SEMICOLON expr SEMICOLON expr RPAREN com_statement
   33    | FOR LPAREN . SEMICOLON expr SEMICOLON RPAREN com_statement
   34    | FOR LPAREN . SEMICOLON SEMICOLON expr RPAREN com_statement
   35    | FOR LPAREN . SEMICOLON SEMICOLON RPAREN com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 79
    LPAREN      shift, and go to state 53
    SEMICOLON   shift, and go to state 80
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    firstexpr        go to state 81
    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 82
    type             go to state 83
    const            go to state 70


State 38

    7 block: LBRACE statements . RBRACE
    9 statements: statements . statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    RBRACE      shift, and go to state 84
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    statement    go to state 85
    empty        go to state 19
    declaration  go to state 20
    assign_stmt  go to state 21
    compound     go to state 22
    if_else      go to state 23
    while        go to state 24
    for          go to state 25
    IO           go to state 26
    printf       go to state 27
    scanf        go to state 28
    type         go to state 40


State 39

    8 statements: statement .

    $default  reduce using rule 8 (statements)


State 40

   17 declaration: type . idlist SEMICOLON
   18            | type . IDENTIFIER ASSIGN assign_expr SEMICOLON

    IDENTIFIER  shift, and go to state 86

    idlist  go to state 48


State 41

   44 printf: PRINTF LPAREN . expr RPAREN
   45       | PRINTF LPAREN . STRING STARY expr RPAREN

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 87
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 88
    const            go to state 70


State 42

   46 scanf: SCANF LPAREN . STRING STARY inexpr RPAREN

    STRING  shift, and go to state 89


State 43

    0 $accept: program $end .

    $default  accept


State 44

    3 submodules: submodules submodule .

    $default  reduce using rule 3 (submodules)


State 45

   42 IO: printf SEMICOLON .

    $default  reduce using rule 42 (IO)


State 46

   43 IO: scanf SEMICOLON .

    $default  reduce using rule 43 (IO)


State 47

   10 function: type IDENTIFIER . LPAREN RPAREN block
   18 declaration: type IDENTIFIER . ASSIGN assign_expr SEMICOLON
   19 idlist: IDENTIFIER .

    LPAREN  shift, and go to state 90
    ASSIGN  shift, and go to state 91

    $default  reduce using rule 19 (idlist)


State 48

   17 declaration: type idlist . SEMICOLON
   20 idlist: idlist . STARY IDENTIFIER

    SEMICOLON  shift, and go to state 92
    STARY      shift, and go to state 93


State 49

   52 basic_expr: IDENTIFIER .

    $default  reduce using rule 52 (basic_expr)


State 50

   93 const: INTEGER .

    $default  reduce using rule 93 (const)


State 51

   94 const: CHARVALUE .

    $default  reduce using rule 94 (const)


State 52

   95 const: STRING .

    $default  reduce using rule 95 (const)


State 53

   54 basic_expr: LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 94
    const            go to state 70


State 54

   63 unary_expr: SUB . unary_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr  go to state 58
    back_expr   go to state 59
    front_expr  go to state 60
    unary_expr  go to state 95
    const       go to state 70


State 55

   62 unary_expr: NOT . unary_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr  go to state 58
    back_expr   go to state 59
    front_expr  go to state 60
    unary_expr  go to state 96
    const       go to state 70


State 56

   59 front_expr: TADD . front_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr  go to state 58
    back_expr   go to state 59
    front_expr  go to state 97
    const       go to state 70


State 57

   60 front_expr: TSUB . front_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr  go to state 58
    back_expr   go to state 59
    front_expr  go to state 98
    const       go to state 70


State 58

   55 back_expr: basic_expr .

    $default  reduce using rule 55 (back_expr)


State 59

   56 back_expr: back_expr . TADD
   57          | back_expr . TSUB
   58 front_expr: back_expr .

    TADD  shift, and go to state 99
    TSUB  shift, and go to state 100

    $default  reduce using rule 58 (front_expr)


State 60

   61 unary_expr: front_expr .

    $default  reduce using rule 61 (unary_expr)


State 61

   64 muldevmode_expr: unary_expr .

    $default  reduce using rule 64 (muldevmode_expr)


State 62

   65 muldevmode_expr: muldevmode_expr . MUL unary_expr
   66                | muldevmode_expr . DEV unary_expr
   67                | muldevmode_expr . MOD unary_expr
   68 addsub_expr: muldevmode_expr .

    MUL  shift, and go to state 101
    DEV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 68 (addsub_expr)


State 63

   69 addsub_expr: addsub_expr . ADD muldevmode_expr
   70            | addsub_expr . SUB muldevmode_expr
   71 relation_expr: addsub_expr .

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 71 (relation_expr)


State 64

   72 relation_expr: relation_expr . LARGE addsub_expr
   73              | relation_expr . LEQ addsub_expr
   74              | relation_expr . SMALL addsub_expr
   75              | relation_expr . SEQ addsub_expr
   76 eq_expr: relation_expr .

    LARGE  shift, and go to state 106
    LEQ    shift, and go to state 107
    SMALL  shift, and go to state 108
    SEQ    shift, and go to state 109

    $default  reduce using rule 76 (eq_expr)


State 65

   77 eq_expr: eq_expr . EQUAL relation_expr
   78        | eq_expr . NEQ relation_expr
   79 and_expr: eq_expr .

    EQUAL  shift, and go to state 110
    NEQ    shift, and go to state 111

    $default  reduce using rule 79 (and_expr)


State 66

   80 and_expr: and_expr . AND eq_expr
   81 logic_expr: and_expr .

    AND  shift, and go to state 112

    $default  reduce using rule 81 (logic_expr)


State 67

   82 logic_expr: logic_expr . OR and_expr
   83 assign_expr: logic_expr .

    OR  shift, and go to state 113

    $default  reduce using rule 83 (assign_expr)


State 68

   84 assign_expr: assign_expr . ASSIGN logic_expr
   85            | assign_expr . PLUS logic_expr
   86            | assign_expr . MINUS logic_expr
   87 expr: assign_expr .

    ASSIGN  shift, and go to state 114
    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116

    $default  reduce using rule 87 (expr)


State 69

   21 assign_stmt: IDENTIFIER ASSIGNOP expr . SEMICOLON
   88 expr: expr . STARY assign_expr

    SEMICOLON  shift, and go to state 117
    STARY      shift, and go to state 118


State 70

   53 basic_expr: const .

    $default  reduce using rule 53 (basic_expr)


State 71

   49 bool_expr: TRUE .

    $default  reduce using rule 49 (bool_expr)


State 72

   50 bool_expr: FALSE .

    $default  reduce using rule 50 (bool_expr)


State 73

   41 bool_statment: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 119


State 74

   51 bool_expr: logic_expr .
   82 logic_expr: logic_expr . OR and_expr

    OR  shift, and go to state 113

    $default  reduce using rule 51 (bool_expr)


State 75

   40 com_statement: block .

    $default  reduce using rule 40 (com_statement)


State 76

   39 com_statement: statement .

    $default  reduce using rule 39 (com_statement)


State 77

   25 if_else: IF bool_statment com_statement .
   26        | IF bool_statment com_statement . ELSE com_statement

    ELSE  shift, and go to state 120

    $default  reduce using rule 25 (if_else)


State 78

   27 while: WHILE bool_statment com_statement .

    $default  reduce using rule 27 (while)


State 79

   91 type: STRING .
   95 const: STRING .

    IDENTIFIER  reduce using rule 91 (type)
    $default    reduce using rule 95 (const)


State 80

   32 for: FOR LPAREN SEMICOLON . expr SEMICOLON expr RPAREN com_statement
   33    | FOR LPAREN SEMICOLON . expr SEMICOLON RPAREN com_statement
   34    | FOR LPAREN SEMICOLON . SEMICOLON expr RPAREN com_statement
   35    | FOR LPAREN SEMICOLON . SEMICOLON RPAREN com_statement

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SEMICOLON   shift, and go to state 121
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 122
    const            go to state 70


State 81

   28 for: FOR LPAREN firstexpr . SEMICOLON expr SEMICOLON expr RPAREN com_statement
   29    | FOR LPAREN firstexpr . SEMICOLON expr SEMICOLON RPAREN com_statement
   30    | FOR LPAREN firstexpr . SEMICOLON SEMICOLON expr RPAREN com_statement
   31    | FOR LPAREN firstexpr . SEMICOLON SEMICOLON RPAREN com_statement

    SEMICOLON  shift, and go to state 123


State 82

   36 firstexpr: assign_expr .
   84 assign_expr: assign_expr . ASSIGN logic_expr
   85            | assign_expr . PLUS logic_expr
   86            | assign_expr . MINUS logic_expr

    ASSIGN  shift, and go to state 114
    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116

    $default  reduce using rule 36 (firstexpr)


State 83

   37 firstexpr: type . idlist
   38          | type . IDENTIFIER ASSIGN assign_expr

    IDENTIFIER  shift, and go to state 124

    idlist  go to state 125


State 84

    7 block: LBRACE statements RBRACE .

    $default  reduce using rule 7 (block)


State 85

    9 statements: statements statement .

    $default  reduce using rule 9 (statements)


State 86

   18 declaration: type IDENTIFIER . ASSIGN assign_expr SEMICOLON
   19 idlist: IDENTIFIER .

    ASSIGN  shift, and go to state 91

    $default  reduce using rule 19 (idlist)


State 87

   45 printf: PRINTF LPAREN STRING . STARY expr RPAREN
   95 const: STRING .

    STARY  shift, and go to state 126

    STARY     [reduce using rule 95 (const)]
    $default  reduce using rule 95 (const)


State 88

   44 printf: PRINTF LPAREN expr . RPAREN
   88 expr: expr . STARY assign_expr

    RPAREN  shift, and go to state 127
    STARY   shift, and go to state 118


State 89

   46 scanf: SCANF LPAREN STRING . STARY inexpr RPAREN

    STARY  shift, and go to state 128


State 90

   10 function: type IDENTIFIER LPAREN . RPAREN block

    RPAREN  shift, and go to state 129


State 91

   18 declaration: type IDENTIFIER ASSIGN . assign_expr SEMICOLON

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 130
    const            go to state 70


State 92

   17 declaration: type idlist SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 93

   20 idlist: idlist STARY . IDENTIFIER

    IDENTIFIER  shift, and go to state 131


State 94

   54 basic_expr: LPAREN expr . RPAREN
   88 expr: expr . STARY assign_expr

    RPAREN  shift, and go to state 132
    STARY   shift, and go to state 118


State 95

   63 unary_expr: SUB unary_expr .

    $default  reduce using rule 63 (unary_expr)


State 96

   62 unary_expr: NOT unary_expr .

    $default  reduce using rule 62 (unary_expr)


State 97

   59 front_expr: TADD front_expr .

    $default  reduce using rule 59 (front_expr)


State 98

   60 front_expr: TSUB front_expr .

    $default  reduce using rule 60 (front_expr)


State 99

   56 back_expr: back_expr TADD .

    $default  reduce using rule 56 (back_expr)


State 100

   57 back_expr: back_expr TSUB .

    $default  reduce using rule 57 (back_expr)


State 101

   65 muldevmode_expr: muldevmode_expr MUL . unary_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr  go to state 58
    back_expr   go to state 59
    front_expr  go to state 60
    unary_expr  go to state 133
    const       go to state 70


State 102

   66 muldevmode_expr: muldevmode_expr DEV . unary_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr  go to state 58
    back_expr   go to state 59
    front_expr  go to state 60
    unary_expr  go to state 134
    const       go to state 70


State 103

   67 muldevmode_expr: muldevmode_expr MOD . unary_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr  go to state 58
    back_expr   go to state 59
    front_expr  go to state 60
    unary_expr  go to state 135
    const       go to state 70


State 104

   69 addsub_expr: addsub_expr ADD . muldevmode_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 136
    const            go to state 70


State 105

   70 addsub_expr: addsub_expr SUB . muldevmode_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 137
    const            go to state 70


State 106

   72 relation_expr: relation_expr LARGE . addsub_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 138
    const            go to state 70


State 107

   73 relation_expr: relation_expr LEQ . addsub_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 139
    const            go to state 70


State 108

   74 relation_expr: relation_expr SMALL . addsub_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 140
    const            go to state 70


State 109

   75 relation_expr: relation_expr SEQ . addsub_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 141
    const            go to state 70


State 110

   77 eq_expr: eq_expr EQUAL . relation_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 142
    const            go to state 70


State 111

   78 eq_expr: eq_expr NEQ . relation_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 143
    const            go to state 70


State 112

   80 and_expr: and_expr AND . eq_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 144
    const            go to state 70


State 113

   82 logic_expr: logic_expr OR . and_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 145
    const            go to state 70


State 114

   84 assign_expr: assign_expr ASSIGN . logic_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 146
    const            go to state 70


State 115

   85 assign_expr: assign_expr PLUS . logic_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 147
    const            go to state 70


State 116

   86 assign_expr: assign_expr MINUS . logic_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 148
    const            go to state 70


State 117

   21 assign_stmt: IDENTIFIER ASSIGNOP expr SEMICOLON .

    $default  reduce using rule 21 (assign_stmt)


State 118

   88 expr: expr STARY . assign_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 149
    const            go to state 70


State 119

   41 bool_statment: LPAREN bool_expr RPAREN .

    $default  reduce using rule 41 (bool_statment)


State 120

   26 if_else: IF bool_statment com_statement ELSE . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 150
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 121

   34 for: FOR LPAREN SEMICOLON SEMICOLON . expr RPAREN com_statement
   35    | FOR LPAREN SEMICOLON SEMICOLON . RPAREN com_statement

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    RPAREN      shift, and go to state 151
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 152
    const            go to state 70


State 122

   32 for: FOR LPAREN SEMICOLON expr . SEMICOLON expr RPAREN com_statement
   33    | FOR LPAREN SEMICOLON expr . SEMICOLON RPAREN com_statement
   88 expr: expr . STARY assign_expr

    SEMICOLON  shift, and go to state 153
    STARY      shift, and go to state 118


State 123

   28 for: FOR LPAREN firstexpr SEMICOLON . expr SEMICOLON expr RPAREN com_statement
   29    | FOR LPAREN firstexpr SEMICOLON . expr SEMICOLON RPAREN com_statement
   30    | FOR LPAREN firstexpr SEMICOLON . SEMICOLON expr RPAREN com_statement
   31    | FOR LPAREN firstexpr SEMICOLON . SEMICOLON RPAREN com_statement

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SEMICOLON   shift, and go to state 154
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 155
    const            go to state 70


State 124

   19 idlist: IDENTIFIER .
   38 firstexpr: type IDENTIFIER . ASSIGN assign_expr

    ASSIGN  shift, and go to state 156

    $default  reduce using rule 19 (idlist)


State 125

   20 idlist: idlist . STARY IDENTIFIER
   37 firstexpr: type idlist .

    STARY  shift, and go to state 93

    $default  reduce using rule 37 (firstexpr)


State 126

   45 printf: PRINTF LPAREN STRING STARY . expr RPAREN

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 157
    const            go to state 70


State 127

   44 printf: PRINTF LPAREN expr RPAREN .

    $default  reduce using rule 44 (printf)


State 128

   46 scanf: SCANF LPAREN STRING STARY . inexpr RPAREN

    GETV  shift, and go to state 158

    inexpr  go to state 159


State 129

   10 function: type IDENTIFIER LPAREN RPAREN . block

    LBRACE  shift, and go to state 9

    block  go to state 160


State 130

   18 declaration: type IDENTIFIER ASSIGN assign_expr . SEMICOLON
   84 assign_expr: assign_expr . ASSIGN logic_expr
   85            | assign_expr . PLUS logic_expr
   86            | assign_expr . MINUS logic_expr

    SEMICOLON  shift, and go to state 161
    ASSIGN     shift, and go to state 114
    PLUS       shift, and go to state 115
    MINUS      shift, and go to state 116


State 131

   20 idlist: idlist STARY IDENTIFIER .

    $default  reduce using rule 20 (idlist)


State 132

   54 basic_expr: LPAREN expr RPAREN .

    $default  reduce using rule 54 (basic_expr)


State 133

   65 muldevmode_expr: muldevmode_expr MUL unary_expr .

    $default  reduce using rule 65 (muldevmode_expr)


State 134

   66 muldevmode_expr: muldevmode_expr DEV unary_expr .

    $default  reduce using rule 66 (muldevmode_expr)


State 135

   67 muldevmode_expr: muldevmode_expr MOD unary_expr .

    $default  reduce using rule 67 (muldevmode_expr)


State 136

   65 muldevmode_expr: muldevmode_expr . MUL unary_expr
   66                | muldevmode_expr . DEV unary_expr
   67                | muldevmode_expr . MOD unary_expr
   69 addsub_expr: addsub_expr ADD muldevmode_expr .

    MUL  shift, and go to state 101
    DEV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 69 (addsub_expr)


State 137

   65 muldevmode_expr: muldevmode_expr . MUL unary_expr
   66                | muldevmode_expr . DEV unary_expr
   67                | muldevmode_expr . MOD unary_expr
   70 addsub_expr: addsub_expr SUB muldevmode_expr .

    MUL  shift, and go to state 101
    DEV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 70 (addsub_expr)


State 138

   69 addsub_expr: addsub_expr . ADD muldevmode_expr
   70            | addsub_expr . SUB muldevmode_expr
   72 relation_expr: relation_expr LARGE addsub_expr .

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 72 (relation_expr)


State 139

   69 addsub_expr: addsub_expr . ADD muldevmode_expr
   70            | addsub_expr . SUB muldevmode_expr
   73 relation_expr: relation_expr LEQ addsub_expr .

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 73 (relation_expr)


State 140

   69 addsub_expr: addsub_expr . ADD muldevmode_expr
   70            | addsub_expr . SUB muldevmode_expr
   74 relation_expr: relation_expr SMALL addsub_expr .

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 74 (relation_expr)


State 141

   69 addsub_expr: addsub_expr . ADD muldevmode_expr
   70            | addsub_expr . SUB muldevmode_expr
   75 relation_expr: relation_expr SEQ addsub_expr .

    ADD  shift, and go to state 104
    SUB  shift, and go to state 105

    $default  reduce using rule 75 (relation_expr)


State 142

   72 relation_expr: relation_expr . LARGE addsub_expr
   73              | relation_expr . LEQ addsub_expr
   74              | relation_expr . SMALL addsub_expr
   75              | relation_expr . SEQ addsub_expr
   77 eq_expr: eq_expr EQUAL relation_expr .

    LARGE  shift, and go to state 106
    LEQ    shift, and go to state 107
    SMALL  shift, and go to state 108
    SEQ    shift, and go to state 109

    $default  reduce using rule 77 (eq_expr)


State 143

   72 relation_expr: relation_expr . LARGE addsub_expr
   73              | relation_expr . LEQ addsub_expr
   74              | relation_expr . SMALL addsub_expr
   75              | relation_expr . SEQ addsub_expr
   78 eq_expr: eq_expr NEQ relation_expr .

    LARGE  shift, and go to state 106
    LEQ    shift, and go to state 107
    SMALL  shift, and go to state 108
    SEQ    shift, and go to state 109

    $default  reduce using rule 78 (eq_expr)


State 144

   77 eq_expr: eq_expr . EQUAL relation_expr
   78        | eq_expr . NEQ relation_expr
   80 and_expr: and_expr AND eq_expr .

    EQUAL  shift, and go to state 110
    NEQ    shift, and go to state 111

    $default  reduce using rule 80 (and_expr)


State 145

   80 and_expr: and_expr . AND eq_expr
   82 logic_expr: logic_expr OR and_expr .

    AND  shift, and go to state 112

    $default  reduce using rule 82 (logic_expr)


State 146

   82 logic_expr: logic_expr . OR and_expr
   84 assign_expr: assign_expr ASSIGN logic_expr .

    OR  shift, and go to state 113

    $default  reduce using rule 84 (assign_expr)


State 147

   82 logic_expr: logic_expr . OR and_expr
   85 assign_expr: assign_expr PLUS logic_expr .

    OR  shift, and go to state 113

    $default  reduce using rule 85 (assign_expr)


State 148

   82 logic_expr: logic_expr . OR and_expr
   86 assign_expr: assign_expr MINUS logic_expr .

    OR  shift, and go to state 113

    $default  reduce using rule 86 (assign_expr)


State 149

   84 assign_expr: assign_expr . ASSIGN logic_expr
   85            | assign_expr . PLUS logic_expr
   86            | assign_expr . MINUS logic_expr
   88 expr: expr STARY assign_expr .

    ASSIGN  shift, and go to state 114
    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116

    $default  reduce using rule 88 (expr)


State 150

   26 if_else: IF bool_statment com_statement ELSE com_statement .

    $default  reduce using rule 26 (if_else)


State 151

   35 for: FOR LPAREN SEMICOLON SEMICOLON RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 162
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 152

   34 for: FOR LPAREN SEMICOLON SEMICOLON expr . RPAREN com_statement
   88 expr: expr . STARY assign_expr

    RPAREN  shift, and go to state 163
    STARY   shift, and go to state 118


State 153

   32 for: FOR LPAREN SEMICOLON expr SEMICOLON . expr RPAREN com_statement
   33    | FOR LPAREN SEMICOLON expr SEMICOLON . RPAREN com_statement

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    RPAREN      shift, and go to state 164
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 165
    const            go to state 70


State 154

   30 for: FOR LPAREN firstexpr SEMICOLON SEMICOLON . expr RPAREN com_statement
   31    | FOR LPAREN firstexpr SEMICOLON SEMICOLON . RPAREN com_statement

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    RPAREN      shift, and go to state 166
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 167
    const            go to state 70


State 155

   28 for: FOR LPAREN firstexpr SEMICOLON expr . SEMICOLON expr RPAREN com_statement
   29    | FOR LPAREN firstexpr SEMICOLON expr . SEMICOLON RPAREN com_statement
   88 expr: expr . STARY assign_expr

    SEMICOLON  shift, and go to state 168
    STARY      shift, and go to state 118


State 156

   38 firstexpr: type IDENTIFIER ASSIGN . assign_expr

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 169
    const            go to state 70


State 157

   45 printf: PRINTF LPAREN STRING STARY expr . RPAREN
   88 expr: expr . STARY assign_expr

    RPAREN  shift, and go to state 170
    STARY   shift, and go to state 118


State 158

   47 inexpr: GETV . IDENTIFIER

    IDENTIFIER  shift, and go to state 171


State 159

   46 scanf: SCANF LPAREN STRING STARY inexpr . RPAREN
   48 inexpr: inexpr . STARY GETV IDENTIFIER

    RPAREN  shift, and go to state 172
    STARY   shift, and go to state 173


State 160

   10 function: type IDENTIFIER LPAREN RPAREN block .

    $default  reduce using rule 10 (function)


State 161

   18 declaration: type IDENTIFIER ASSIGN assign_expr SEMICOLON .

    $default  reduce using rule 18 (declaration)


State 162

   35 for: FOR LPAREN SEMICOLON SEMICOLON RPAREN com_statement .

    $default  reduce using rule 35 (for)


State 163

   34 for: FOR LPAREN SEMICOLON SEMICOLON expr RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 174
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 164

   33 for: FOR LPAREN SEMICOLON expr SEMICOLON RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 175
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 165

   32 for: FOR LPAREN SEMICOLON expr SEMICOLON expr . RPAREN com_statement
   88 expr: expr . STARY assign_expr

    RPAREN  shift, and go to state 176
    STARY   shift, and go to state 118


State 166

   31 for: FOR LPAREN firstexpr SEMICOLON SEMICOLON RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 177
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 167

   30 for: FOR LPAREN firstexpr SEMICOLON SEMICOLON expr . RPAREN com_statement
   88 expr: expr . STARY assign_expr

    RPAREN  shift, and go to state 178
    STARY   shift, and go to state 118


State 168

   28 for: FOR LPAREN firstexpr SEMICOLON expr SEMICOLON . expr RPAREN com_statement
   29    | FOR LPAREN firstexpr SEMICOLON expr SEMICOLON . RPAREN com_statement

    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHARVALUE   shift, and go to state 51
    STRING      shift, and go to state 52
    LPAREN      shift, and go to state 53
    RPAREN      shift, and go to state 179
    SUB         shift, and go to state 54
    NOT         shift, and go to state 55
    TADD        shift, and go to state 56
    TSUB        shift, and go to state 57

    basic_expr       go to state 58
    back_expr        go to state 59
    front_expr       go to state 60
    unary_expr       go to state 61
    muldevmode_expr  go to state 62
    addsub_expr      go to state 63
    relation_expr    go to state 64
    eq_expr          go to state 65
    and_expr         go to state 66
    logic_expr       go to state 67
    assign_expr      go to state 68
    expr             go to state 180
    const            go to state 70


State 169

   38 firstexpr: type IDENTIFIER ASSIGN assign_expr .
   84 assign_expr: assign_expr . ASSIGN logic_expr
   85            | assign_expr . PLUS logic_expr
   86            | assign_expr . MINUS logic_expr

    ASSIGN  shift, and go to state 114
    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116

    $default  reduce using rule 38 (firstexpr)


State 170

   45 printf: PRINTF LPAREN STRING STARY expr RPAREN .

    $default  reduce using rule 45 (printf)


State 171

   47 inexpr: GETV IDENTIFIER .

    $default  reduce using rule 47 (inexpr)


State 172

   46 scanf: SCANF LPAREN STRING STARY inexpr RPAREN .

    $default  reduce using rule 46 (scanf)


State 173

   48 inexpr: inexpr STARY . GETV IDENTIFIER

    GETV  shift, and go to state 181


State 174

   34 for: FOR LPAREN SEMICOLON SEMICOLON expr RPAREN com_statement .

    $default  reduce using rule 34 (for)


State 175

   33 for: FOR LPAREN SEMICOLON expr SEMICOLON RPAREN com_statement .

    $default  reduce using rule 33 (for)


State 176

   32 for: FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 182
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 177

   31 for: FOR LPAREN firstexpr SEMICOLON SEMICOLON RPAREN com_statement .

    $default  reduce using rule 31 (for)


State 178

   30 for: FOR LPAREN firstexpr SEMICOLON SEMICOLON expr RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 183
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 179

   29 for: FOR LPAREN firstexpr SEMICOLON expr SEMICOLON RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 184
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 180

   28 for: FOR LPAREN firstexpr SEMICOLON expr SEMICOLON expr . RPAREN com_statement
   88 expr: expr . STARY assign_expr

    RPAREN  shift, and go to state 185
    STARY   shift, and go to state 118


State 181

   48 inexpr: inexpr STARY GETV . IDENTIFIER

    IDENTIFIER  shift, and go to state 186


State 182

   32 for: FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN com_statement .

    $default  reduce using rule 32 (for)


State 183

   30 for: FOR LPAREN firstexpr SEMICOLON SEMICOLON expr RPAREN com_statement .

    $default  reduce using rule 30 (for)


State 184

   29 for: FOR LPAREN firstexpr SEMICOLON expr SEMICOLON RPAREN com_statement .

    $default  reduce using rule 29 (for)


State 185

   28 for: FOR LPAREN firstexpr SEMICOLON expr SEMICOLON expr RPAREN . com_statement

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    WHILE       shift, and go to state 7
    FOR         shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12

    block          go to state 75
    statement      go to state 76
    empty          go to state 19
    declaration    go to state 20
    assign_stmt    go to state 21
    compound       go to state 22
    if_else        go to state 23
    while          go to state 24
    for            go to state 25
    com_statement  go to state 187
    IO             go to state 26
    printf         go to state 27
    scanf          go to state 28
    type           go to state 40


State 186

   48 inexpr: inexpr STARY GETV IDENTIFIER .

    $default  reduce using rule 48 (inexpr)


State 187

   28 for: FOR LPAREN firstexpr SEMICOLON expr SEMICOLON expr RPAREN com_statement .

    $default  reduce using rule 28 (for)
